// This replaces the code generator's default build.gradle template (see:
// https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/Java/build.gradle.mustache)
// which had a number of issues making it unsuitable for the LaunchDarkly API
// client build: it relied on a very old version of Gradle and the Gradle plugins,
// it used the obsolete jcenter repository, and it did not include the necessary
// javax.annotation dependency. It also had the option of building for Android,
// but we do not need that. This script also adds code signing and pom properties.

// IMPORTANT: If the Java client fails to build due to a dependency problem, it
// probably means that the Swagger code generator changed the dependencies in its
// own build.gradle and we did not update them here. Unfortunately, overriding the
// build.gradle in this way does not allow us to copy their dependencies.

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.12.0'
    id 'org.ajoberstar.git-publish' version '3.0.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

def ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('OSSRH_USERNAME')
def ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('OSSRH_PASSWORD')

allprojects {
    group = '{{groupId}}'
    version = '{{artifactVersion}}'
    archivesBaseName = '{{artifactId}}'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

dependencies {
    implementation 'io.swagger:swagger-annotations:1.5.24'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.gsonfire:gson-fire:1.8.4'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation 'org.threeten:threetenbp:1.4.3'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.14.0'
}

compileJava {
    // The generated code should be treated as UTF-8 because some of the properties
    // in our openapi.json may include non-ASCII Unicode characters.
    options.encoding = "UTF-8"
}

compileTestJava {
    options.encoding = "UTF-8"
}

javadoc {
    options.encoding = "UTF-8"
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

if (JavaVersion.current().isJava8Compatible()) {
    // Suppress the many Javadoc warnings that we would otherwise get from the generated code
    tasks.withType(Javadoc) {
        options.addBooleanOption('Xdoclint:none', true)
    }
}

nexusStaging {
    packageGroup = "com.launchdarkly"
    username = ossrhUsername
    password = ossrhPassword
}

publishing {
    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'api-client'
            artifact sourceJar
            artifact javadocJar

            pom {
                  name = "API Client for Java"
                  packaging = 'jar'
                  description = 'Official LaunchDarkly API Client for Java'
                  url = 'https://github.com/launchdarkly/api-client-java'

                  licenses {
                      license {
                          name = 'The Apache License, Version 2.0'
                          url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                      }
                  }

                  developers {
                      developer {
                          id = 'launchdarkly'
                          name = 'LaunchDarkly'
                          email = 'support@launchdarkly.com'
                      }
                  }

                  scm {
                      connection = 'scm:git:git://github.com/launchdarkly/api-client-java.git'
                      developerConnection = 'scm:git:ssh:git@github.com:launchdarkly/api-client-java.git'
                      url = 'https://github.com/launchdarkly/api-client-java'
                  }
           }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

version: 2

# Keep this at the top to reduce noise in chatrooms when we mess up circleci setup
experimental:
  notify:
    branches:
      only:
      - main

jobs:
  build:
    docker:
    - image: ldcircleci/openapi-release:1  # same image we use for releases, includes all necessary tools
    steps:
    - checkout

    - run:
        name: Loading previous client repos
        command: |
          export REPO_USER_URL=https://github.com/$CIRCLE_PROJECT_USERNAME
          make load_prior_targets

    - run:
        name: Generating code
        command: |
          export REPO_USER_URL=https://github.com/$CIRCLE_PROJECT_USERNAME
          echo "Setting version to ${CIRCLE_TAG:-0.0.1}"
          LD_RELEASE_VERSION="${CIRCLE_TAG:-0.0.1}" make all

    - run:
        name: Archiving targets
        command: |
          cd targets
          tar cvfz api-clients-${CIRCLE_TAG:-0.0.1}-${CIRCLE_SHA1:0:7}.tgz api-client-*
          mkdir /tmp/api-clients
          cp api-clients-*.tgz /tmp/api-clients

    - persist_to_workspace:
        root: targets
        paths:
        - .

    - store_artifacts:
        path: targets/html2
        destination: html

    - store_artifacts:
        path: targets/html
        destination: html-plain

    - store_artifacts:
        path: /tmp/api-clients

  test-go:
    docker:
    - image: cimg/go:1.15
    steps:
    - checkout
    - attach_workspace:
        at: targets
    - run:  |
        sudo mkdir -p /go/src/github.com/launchdarkly
        sudo cp -r targets/api-client-go /go/src/github.com/launchdarkly/
    - run: |
        cd samples/go
        make

  test-javascript:
    docker:
    - image: cimg/node:14.17
    steps:
    - checkout
    - attach_workspace:
        at: targets
    - run: |
        cd targets/api-client-javascript
        npm install
        cd ../..
        cd samples/javascript
        sudo npm link ../../targets/api-client-javascript
        node index.js

  test-python:
    docker:
    - image: cimg/python:3.7
    steps:
    - checkout
    - attach_workspace:
        at: targets
    - run: sudo apt-get update && sudo apt-get install -y pip
    - run: |
        cd samples/python
        pip install -e ../../targets/api-client-python
        python main.py

  test-ruby:
    docker:
    - image: cimg/ruby:2.7
    steps:
    - checkout
    - attach_workspace:
        at: targets
    - run:
        name: Install Gem
        command: |
          cd targets/api-client-ruby
          gem build launchdarkly_api.gemspec
          gem install ./launchdarkly_api*.gem
    - run: |
        cd samples/ruby
        ruby main.rb

  test-java:
    docker:
    - image: circleci/openjdk:8
    steps:
    - checkout
    - attach_workspace:
        at: targets
    - run: |
          cd targets/api-client-java
          mvn clean install
          cd ../../samples/java
          sed -i.bak -e "s/API_CLIENT_VERSION/${CIRCLE_TAG:-0.0.1}/g" pom.xml
          mvn clean install
          mvn exec:java

  test-typescript:
    docker:
    - image: cimg/node:14.17
    steps:
    - checkout
    - attach_workspace:
        at: targets
    - run: |
        cd targets/api-client-typescript-axios
        sudo npm install
        sudo npm run build
        sudo npm link 
        cd ../../samples/typescript-axios
        sudo npm link launchdarkly-api-typescript
        sudo npm install
        sudo npm run build
        npm start

  test-php:
    docker:
    - image: cimg/php:8.0.19
    steps:
    - checkout
    - attach_workspace:
        at: targets
    - run: |
        cd samples/php
        echo '{"require":{"launchdarkly/api-client-php":"@dev","guzzlehttp/guzzle":"*"},"repositories":[{"type":"path","url":"../../targets/api-client-php","options":{"symlink":true}}]}' > composer.json 
        composer update
        php index.php

workflows:
  version: 2
  build:
    jobs:
    - build:
        filters:
          tags:
            only:
              /.*/ # Required in order to run publish job for a tag push
    - test-go:
        requires:
        - build
    - test-javascript:
        requires:
        - build
    - test-python:
        requires:
        - build
    - test-java:
        requires:
        - build
    - test-ruby:
        requires:
        - build
    - test-typescript:
        requires:
        - build
    - test-php:
        requires:
        - build

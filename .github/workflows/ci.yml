name: CI (build + client samples)

on:
#   push:
#     branches: [ main ]
#     tags: ['*']
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: runs-on=${{ github.run_id }}/runner=ubuntu22-2cpu-8gb-x64
    container:
      image: ldcircleci/openapi-release:1
    defaults:
      run:
        shell: bash
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.2  
      - uses: actions/checkout@v4
      - name: Compute TAG/SHORT_SHA and envs
        id: meta
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then TAG="${GITHUB_REF#refs/tags/}"; else TAG="0.0.1"; fi
          echo "TAG=$TAG" >> "$GITHUB_ENV"
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"
          echo "REPO_USER_URL=https://github.com/${{ github.repository_owner }}" >> "$GITHUB_ENV"
          echo "LD_RELEASE_VERSION=$TAG" >> "$GITHUB_ENV"
      - name: Generating code
        run: |
          export REPO_USER_URL="$REPO_USER_URL"
          echo "Setting version to ${TAG}"
          LD_RELEASE_VERSION="${TAG}" make all
      - name: Archive tgz
        run: |
          cd targets
          tar cvfz "api-clients-${TAG}-${SHORT_SHA}.tgz" api-client-*
          mkdir -p /tmp/api-clients
          cp "api-clients-${TAG}-${SHORT_SHA}.tgz" /tmp/api-clients/
      - name: Upload targets workspace
        uses: actions/upload-artifact@v4
        with:
          name: targets
          path: targets
      - name: Upload html2
        uses: actions/upload-artifact@v4
        with:
          name: html
          path: targets/html2
      - name: Upload html-plain
        uses: actions/upload-artifact@v4
        with:
          name: html-plain
          path: targets/html
      - name: Upload api-clients tgz
        uses: actions/upload-artifact@v4
        with:
          name: api-clients
          path: /tmp/api-clients

  test-go:
    runs-on: runs-on=${{ github.run_id }}/runner=ubuntu22-2cpu-8gb-x64
    needs: build
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.2  
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'              # FIX: newer Go to match generated code
      - name: Run Go sample
        env:
          GO111MODULE: "on"
        run: |
          # GOPATH copy is likely unnecessary with modules, but kept to mirror CircleCI
          sudo mkdir -p /go/src/github.com/launchdarkly
          sudo cp -r targets/api-client-go /go/src/github.com/launchdarkly/
          cd samples/go
          make

  test-javascript:
    runs-on: runs-on=${{ github.run_id }}/runner=ubuntu22-2cpu-8gb-x64
    needs: build
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.2  
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-node@v4
        with:
          node-version: '20'                 # modern Node; still need CJS build below
      - name: Build JS client as CommonJS   # FIX: force-transform ESM -> CJS so sample's require() works
        working-directory: targets/api-client-javascript
        run: |
          npm install
          npx --yes @babel/cli@7 @babel/core@7 @babel/plugin-transform-modules-commonjs@7 \
            babel src -d dist --plugins @babel/plugin-transform-modules-commonjs
      - name: Run JS sample
        run: |
          cd samples/javascript
          # link the local package name (dir name is fine with npm link path)
          sudo npm link ../../targets/api-client-javascript
          node index.js

  test-python:

    runs-on: runs-on=${{ github.run_id }}/runner=ubuntu22-2cpu-8gb-x64
    needs: build
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.2  
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-python@v5
        with:
          python-version: '3.14'
      - name: Run Python sample
        run: |
          python -m pip install --upgrade pip
          cd samples/python
          pip install -e ../../targets/api-client-python
          python main.py

  test-ruby:
    runs-on: runs-on=${{ github.run_id }}/runner=ubuntu22-2cpu-8gb-x64
    needs: build
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.2  
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Prepare RubyGems / ffi        # FIX: preinstall ffi compatible with Ruby 2.7 + older RubyGems
        run: |
          gem update --system || true
          gem install ffi -v 1.17.2 --no-document || true
      - name: Install Gem
        run: |
          cd targets/api-client-ruby
          gem build launchdarkly_api.gemspec
          gem install ./launchdarkly_api*.gem
      - name: Run Ruby sample
        run: |
          cd samples/ruby
          ruby main.rb

  test-java:
    runs-on: runs-on=${{ github.run_id }}/runner=ubuntu22-2cpu-8gb-x64
    needs: build
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.2  
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Compute TAG
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then TAG="${GITHUB_REF#refs/tags/}"; else TAG="0.0.1"; fi
          echo "TAG=$TAG" >> "$GITHUB_ENV"
      - name: Build & run Java sample
        run: |
          cd targets/api-client-java
          mvn clean install
          cd ../../samples/java
          sed -i.bak -e "s/API_CLIENT_VERSION/${TAG}/g" pom.xml
          mvn clean install
          mvn exec:java

  test-typescript:
    runs-on: runs-on=${{ github.run_id }}/runner=ubuntu22-2cpu-8gb-x64
    needs: build
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.2  
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Run TS sample (axios)
        run: |
          cd targets/api-client-typescript-axios
          sudo npm install
          sudo npm run build
          sudo npm link
          cd ../../samples/typescript-axios
          sudo npm link launchdarkly-api-typescript
          sudo npm install
          sudo npm run build
          npm start

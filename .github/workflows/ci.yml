name: CI (build + client samples)

on:
#   push:
#     # branches: [ main ]
#     # tags: ['*']   # run on any tag push, like CircleCIâ€™s filters
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    name: Build & package generated clients
    runs-on: ubuntu-latest
    # Use the same Docker image as CircleCI for the build/codegen steps
    container:
      image: ldcircleci/openapi-release:1
      options: --user 1001
    # In containers, the default shell is 'sh'; we need bash for ${VAR::7} etc.
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Compute TAG/SHORT_SHA and envs
        id: meta
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG="0.0.1"
          fi
          echo "TAG=$TAG" >> "$GITHUB_ENV"
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"
          echo "REPO_USER_URL=https://github.com/${{ github.repository_owner }}" >> "$GITHUB_ENV"
          echo "LD_RELEASE_VERSION=$TAG" >> "$GITHUB_ENV"

      - name: Generating code
        run: |
          export REPO_USER_URL="$REPO_USER_URL"
          echo "Setting version to ${TAG}"
          LD_RELEASE_VERSION="${TAG}" make all

      - name: Archive tgz
        run: |
          cd targets
          tar cvfz "api-clients-${TAG}-${SHORT_SHA}.tgz" api-client-*
          mkdir -p /tmp/api-clients
          cp "api-clients-${TAG}-${SHORT_SHA}.tgz" /tmp/api-clients/

      # Make "targets" available to downstream jobs (like CircleCI workspaces)
      - name: Upload targets workspace
        uses: actions/upload-artifact@v4
        with:
          name: targets
          path: targets

      # Store artifacts like CircleCI
      - name: Upload html2
        uses: actions/upload-artifact@v4
        with:
          name: html
          path: targets/html2
      - name: Upload html-plain
        uses: actions/upload-artifact@v4
        with:
          name: html-plain
          path: targets/html
      - name: Upload api-clients tgz
        uses: actions/upload-artifact@v4
        with:
          name: api-clients
          path: /tmp/api-clients

  test-go:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-go@v5
        with:
          go-version: '1.15'
      - name: Run Go sample
        run: |
          sudo mkdir -p /go/src/github.com/launchdarkly
          sudo cp -r targets/api-client-go /go/src/github.com/launchdarkly/
          cd samples/go
          make

  test-javascript:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-node@v4
        with:
          node-version: '14.17'
      - name: Run JS sample
        run: |
          cd targets/api-client-javascript
          npm install
          cd ../..
          cd samples/javascript
          sudo npm link ../../targets/api-client-javascript
          node index.js

  test-python:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-python@v5
        with:
          python-version: '3.7'
      - name: Run Python sample
        run: |
          python -m pip install --upgrade pip
          cd samples/python
          pip install -e ../../targets/api-client-python
          python main.py

  test-ruby:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install Gem
        run: |
          cd targets/api-client-ruby
          gem build launchdarkly_api.gemspec
          gem install ./launchdarkly_api*.gem
      - name: Run Ruby sample
        run: |
          cd samples/ruby
          ruby main.rb

  test-java:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Compute TAG
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG="0.0.1"
          fi
          echo "TAG=$TAG" >> "$GITHUB_ENV"
      - name: Build & run Java sample
        run: |
          cd targets/api-client-java
          mvn clean install
          cd ../../samples/java
          sed -i.bak -e "s/API_CLIENT_VERSION/${TAG}/g" pom.xml
          mvn clean install
          mvn exec:java

  test-typescript:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: actions/setup-node@v4
        with:
          node-version: '14.17'
      - name: Run TS sample (axios)
        run: |
          cd targets/api-client-typescript-axios
          sudo npm install
          sudo npm run build
          sudo npm link
          cd ../../samples/typescript-axios
          sudo npm link launchdarkly-api-typescript
          sudo npm install
          sudo npm run build
          npm start

  test-php:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: targets
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - name: Run PHP sample
        run: |
          cd samples/php
          echo '{"require":{"launchdarkly/api-client-php":"@dev","guzzlehttp/guzzle":"*"},"repositories":[{"type":"path","url":"../../targets/api-client-php","options":{"symlink":true}}]}' > composer.json
          composer update
          php index.php